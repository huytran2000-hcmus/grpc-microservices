apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
  namespace: {{ .Release.Namespace}}
  labels:
    {{- include "grpc-microservices.labels" . | nindent 4}}
data:
  initdb.sql: |
    CREATE DATABASE order_service;
    CREATE DATABASE payment_service;

    CREATE USER 'payment_service'@'%' IDENTIFIED BY 'verysecretpass';
    CREATE USER 'order_service'@'%' IDENTIFIED BY 'verysecretpass';

    GRANT ALL PRIVILEGES ON order_service.* TO 'order_service'@'%';
    GRANT ALL PRIVILEGES ON payment_service.* TO 'payment_service'@'%';
immutable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: {{ .Release.Namespace}}
  labels:
    {{- include "grpc-microservices.labels" . | nindent 4}}
data:
  prometheus.yml: |
    global:
      scrape_interval: 5s
      evaluation_interval: 15s
    rule_files:
      - prometheus.rules.yml
    scrape_configs:
      - job_name: otlp
        static_configs:
          - targets: [ '{{ .Release.Name }}-opentelemetry-collector:9000']
            labels:
              group: RED
  prometheus.rules.yml: |
    groups:
    - name: RED
      rules:
        - record: microservices:red:request_inbound_rate
          expr: sum(rate(rpc_server_requests_per_rpc_count[10s])) by (service)
        - record: microservices:red:invalid_argument_error_rate
          expr: sum(rate(rpc_server_responses_per_rpc_count{rpc_grpc_status_code="3"}[10s])) by (service)
        - record: microservices:red:internal_argument_error_rate
          expr: sum(rate(rpc_server_responses_per_rpc_count{rpc_grpc_status_code="13"}[10s])) by (service)
        - record: microservices:red:unknown_argument_error_rate
          expr: sum(rate(rpc_server_responses_per_rpc_count{rpc_grpc_status_code="2"}[10s])) by (service)
        - record: microservices:red:two_nine_tile_millisecond_duration
          expr: histogram_quantile(0.99, sum(rpc_server_duration_milliseconds_bucket) by (service, le))
