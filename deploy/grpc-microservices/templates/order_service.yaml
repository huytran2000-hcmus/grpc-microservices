apiVersion: v1
kind: Service
metadata:
  name: order
  namespace: {{ .Release.Namespace}}
  labels:
    name: order
    {{- include "grpc-microservices.labels" . | nindent 4}}
spec:
  selector:
    service: order
  ports:
    - name: grpc
      port: {{ .Values.service.orderPort }}
      protocol: TCP
      targetPort: {{ .Values.service.orderPort }}
      appProtocol: grpc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: order
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: GRPC
    {{- if eq .Values.tags.tls true }} 
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: selfsigned-issuer 
    {{- end }}
spec:
  rules:
    - http:
        paths:
          - path: /Order
            pathType: Prefix
            backend:
              service:
                name: order
                port:
                  name: grpc
  tls:
    - hosts:
        - ingress.local
      secretName: order-tls
  ingressClassName: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order
  namespace: {{ .Release.Namespace}}
  labels: 
    name: order
    {{- include "grpc-microservices.labels" . | nindent 4}}
spec:
  replicas: {{ .Values.replicaCount.order }}
  selector:
    matchLabels:
      service: order
  template:
    metadata:
      labels: 
        service: order
        {{- include "grpc-microservices.labels" . | nindent 8}}
    spec:
      initContainers:
      - name: mysql-wait
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup {{ .Release.Name }}-mysql; do echo waiting for mysql; sleep 2; done']
      containers:
      - name: order
        image: "huypk2000/grpc-order-service:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: ENV
          value: "prod"
        - name: APPLICATION_PORT
          value: {{ .Values.service.orderPort | quote }}
        - name: DATA_SOURCE_URL
          value: "order_service:verysecretpass@tcp({{ .Release.Name }}-mysql:3306)/order_service?charset=utf8mb4&parseTime=True&loc=Local"
        - name: PAYMENT_SERVICE_URL
          value: "payment:{{ .Values.service.paymentPort }}"
        ports:
        - containerPort: {{ .Values.service.orderPort }}
        readinessProbe:
          grpc:
            port: {{ .Values.service.orderPort }}
          initialDelaySeconds: 1
        livenessProbe:
          grpc:
            port: {{ .Values.service.orderPort }}
          initialDelaySeconds: 10
